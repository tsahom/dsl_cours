/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.generator;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import statemachine.FinalState;
import statemachine.InitialState;
import statemachine.MyFSM;
import statemachine.State;
import statemachine.Transition;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    MyFSM myFSM = ((MyFSM) _get);
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("abstract class FSM {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("static State currentState;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("static ArrayList<State> states;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("static ArrayList<Transition> transitions;");
    _builder.newLine();
    _builder.append("}");
    fsa.generateFile("FSM.java", _builder);
    String _name = myFSM.getName();
    String _plus = (_name + ".java");
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("import java.util.ArrayList;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("class ");
    String _name_1 = myFSM.getName();
    _builder_1.append(_name_1);
    _builder_1.append(" extends FSM {");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t");
    _builder_1.append("public static void main(String[] args){");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("states = new ArrayList<State>();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("transitions = new ArrayList<Transition>();");
    _builder_1.newLine();
    {
      EList<State> _state = myFSM.getState();
      for(final State s : _state) {
        {
          if ((s instanceof FinalState)) {
            _builder_1.append("\t\t");
            _builder_1.append("State ");
            String _name_2 = ((FinalState)s).getName();
            _builder_1.append(_name_2, "\t\t");
            _builder_1.append(" = new FinalState(\"");
            String _name_3 = ((FinalState)s).getName();
            _builder_1.append(_name_3, "\t\t");
            _builder_1.append("\");");
            _builder_1.newLineIfNotEmpty();
            _builder_1.append("\t\t");
            _builder_1.append("states.add(");
            String _name_4 = ((FinalState)s).getName();
            _builder_1.append(_name_4, "\t\t");
            _builder_1.append(");");
            _builder_1.newLineIfNotEmpty();
          } else {
            if ((s instanceof InitialState)) {
              _builder_1.append("\t\t");
              _builder_1.append("State ");
              String _name_5 = ((InitialState)s).getName();
              _builder_1.append(_name_5, "\t\t");
              _builder_1.append(" = new InitialState(\"");
              String _name_6 = ((InitialState)s).getName();
              _builder_1.append(_name_6, "\t\t");
              _builder_1.append("\");");
              _builder_1.newLineIfNotEmpty();
              _builder_1.append("\t\t");
              _builder_1.append("states.add(");
              String _name_7 = ((InitialState)s).getName();
              _builder_1.append(_name_7, "\t\t");
              _builder_1.append(");");
              _builder_1.newLineIfNotEmpty();
            } else {
              _builder_1.append("\t\t");
              _builder_1.append("State ");
              String _name_8 = s.getName();
              _builder_1.append(_name_8, "\t\t");
              _builder_1.append(" = new State(\"");
              String _name_9 = s.getName();
              _builder_1.append(_name_9, "\t\t");
              _builder_1.append("\");");
              _builder_1.newLineIfNotEmpty();
              _builder_1.append("\t\t");
              _builder_1.append("states.add(");
              String _name_10 = s.getName();
              _builder_1.append(_name_10, "\t\t");
              _builder_1.append(");");
              _builder_1.newLineIfNotEmpty();
            }
          }
        }
      }
    }
    {
      EList<Transition> _tr = myFSM.getTr();
      for(final Transition t : _tr) {
        _builder_1.append("\t\t");
        _builder_1.append("Transition ");
        String _name_11 = t.getName();
        _builder_1.append(_name_11, "\t\t");
        _builder_1.append(" = new Transition(");
        String _name_12 = t.getFrom().getName();
        _builder_1.append(_name_12, "\t\t");
        _builder_1.append(",");
        String _name_13 = t.getTo().getName();
        _builder_1.append(_name_13, "\t\t");
        _builder_1.append(");");
        _builder_1.newLineIfNotEmpty();
        _builder_1.append("\t\t");
        _builder_1.append("transitions.add(");
        String _name_14 = t.getName();
        _builder_1.append(_name_14, "\t\t");
        _builder_1.append(");");
        _builder_1.newLineIfNotEmpty();
      }
    }
    _builder_1.append("\t\t");
    _builder_1.append("currentState = ");
    String _name_15 = myFSM.getInitialstate().getName();
    _builder_1.append(_name_15, "\t\t");
    _builder_1.append(";");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t\t");
    _builder_1.append("currentState.getState();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("while(true){");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("for(int i = 0;i<transitions.size();i++){");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("if(currentState == transitions.get(i).getFrom()){");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("currentState = transitions.get(i).getTo();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("currentState.getState();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t\t");
    _builder_1.append("break;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("}\t");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("if(currentState instanceof FinalState){");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("break;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("System.out.println(\"End\");");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    fsa.generateFile(_plus, _builder_1);
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("class State{");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("String name;");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("State(String name){");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("this.name = name;");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("}\t");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("public void getState(){");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("System.out.println(name);");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("}");
    fsa.generateFile("State.java", _builder_2);
    StringConcatenation _builder_3 = new StringConcatenation();
    _builder_3.append("class InitialState extends State{");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("InitialState(String name){");
    _builder_3.newLine();
    _builder_3.append("\t\t");
    _builder_3.append("super(name);");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("}");
    _builder_3.newLine();
    _builder_3.append("}");
    fsa.generateFile("InitialState.java", _builder_3);
    StringConcatenation _builder_4 = new StringConcatenation();
    _builder_4.append("class FinalState extends State{");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("FinalState(String name){");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("super(name);");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.append("}");
    fsa.generateFile("FinalState.java", _builder_4);
    StringConcatenation _builder_5 = new StringConcatenation();
    _builder_5.append("public class Transition{ ");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("State from;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("State to;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("Transition(State s1, State s2){");
    _builder_5.newLine();
    _builder_5.append("\t\t\t");
    _builder_5.append("from = s1;");
    _builder_5.newLine();
    _builder_5.append("\t\t\t");
    _builder_5.append("to = s2;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("State getFrom(){");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("return from;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("State getTo(){");
    _builder_5.newLine();
    _builder_5.append("\t\t\t");
    _builder_5.append("return to;");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.append("}");
    fsa.generateFile("Transition.java", _builder_5);
  }
}
